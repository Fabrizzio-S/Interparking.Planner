@model Interparking.Planner.ViewModels.RouteResumeViewModel

<div class="container">
    <div class="row">
        <div class="col-lg-4">
            <table class="table">
                @foreach (var route in Model.Routes)
                {
                    <tr>
                        <td>
                            <a class="btn btn-lg">
                                <i onclick="showOnMap('@route.Id')">@route.Name</i>
                            </a>
                        </td>
                        <td>
                            <a class="btn btn-lg" href="/Route/Edit?routeId=@route.Id">
                                <i class="glyphicon glyphicon-edit"></i>
                            </a>
                        </td>
                    </tr>
                }
            </table>
        </div>
        <div class="col-lg-8">
            <div id="map" style="width:100%;height:500px;"></div>
        </div>
    </div>
</div>

@section Scripts{
    <environment include="Development">
        <script src="~/node_modules/bootstrap-autocomplete/dist/latest/bootstrap-autocomplete.js"></script>
        <script src="https://maps.googleapis.com/maps/api/js?key=@Configuration["GoogleApiKey"]" ></script>
    </environment>
    <environment exclude="Development">

    </environment>
    <script>
        var directionsService = new google.maps.DirectionsService();
        var directionsRenderer = new google.maps.DirectionsRenderer();
            var map = new google.maps.Map(document.getElementById('map'),
                {
                    zoom: 7,
                    center: { lat: 50.845052, lng: 4.349985 },
                });
        directionsRenderer.setMap(map);

        var model = @Html.Raw(Json.Serialize(Model));

        function showOnMap(id) {
            var route = $.grep(model.routes, function (element) {
                return element.id == id;
            })
            if (!route.length) {
                return;
            }
            var wayPoints = [];
            if (route[0].wayPoints) {
                for (var i = 0; i < route[0].wayPoints.length; i++) {
                    wayPoints[i] = { 'location': new google.maps.LatLng(route[0].wayPoints[i].latitude, route[0].wayPoints[i].longitude), 'stopover': false }
                }
            }

            directionsService.route({
                'origin': new google.maps.LatLng(route[0].startPoint.latitude, route[0].startPoint.longitude),
                'destination': new google.maps.LatLng(route[0].endPoint.latitude, route[0].endPoint.longitude),
                'waypoints': wayPoints,
                'travelMode': google.maps.DirectionsTravelMode.DRIVING
            }, function (response, status) {
                    if (status === 'OK') {
                        directionsRenderer.setDirections(response);
                    }
                    else {
                        window.alert('Directions request failed due to ' + status);
                    }
            })
        }
    </script>
}